latcheck_server v1.0: 
一、说明
本程序是TLS服务器，Qt/C++实现，无UI，使用MySQL数据库，编译和运行在Ubuntu服务器下。
主要功能是实现客户端远程登录，存储TLS客户端上传检测报告，并提供HTTPS REST查询接口查询任意两个地点之间的延时信息。

二、数据库设计：
数据库：latcheck

表设计：

1. users表：存储登录账号
   - user_id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '用户ID，主键'
   - username VARCHAR(50) NOT NULL UNIQUE COMMENT '用户名，唯一'
   - password_hash VARCHAR(255) NOT NULL COMMENT '密码哈希值'
   - salt VARCHAR(255) NOT NULL COMMENT '密码盐值'
   - email VARCHAR(100) COMMENT '邮箱，可选'
   - role TINYINT NOT NULL DEFAULT 2 COMMENT '0=Admin, 1=ReportUploader, 2=ReportViewer'
   - status TINYINT NOT NULL DEFAULT 0 COMMENT '0=Active, 1=Inactive, 2=Suspended, 3=Deleted'
   - login_attempts INT DEFAULT 0 COMMENT '登录尝试次数'
   - locked_until DATETIME NULL COMMENT '锁定截止时间'
   - created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
   - updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间'
   - last_login_at DATETIME NULL COMMENT '最后登录时间'
   - INDEX idx_username (username)
   - INDEX idx_status (status)
   - INDEX idx_created_at (created_at)

2. latcheck_report表：存储客户端上传的报告基本信息
   - report_id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '报告ID，主键'
   - user_name VARCHAR(50) NOT NULL COMMENT '创建者用户名'
   - check_location VARCHAR(255) NOT NULL COMMENT '客户端检测位置信息'
   - status TINYINT NOT NULL DEFAULT 0 COMMENT '0=Pending, 1=Processing, 2=Completed, 3=Failed'
   - created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
   - updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间'
   - INDEX idx_user_name (user_name)
   - INDEX idx_location (check_location)
   - INDEX idx_created_time (created_time)
   - INDEX idx_status (status)

3. report_details表：存储报告包含的有效检查记录
   - detail_id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '详情ID，主键'
   - report_id BIGINT NOT NULL COMMENT '对应的报告ID'
   - server_name VARCHAR(100) NOT NULL COMMENT '服务器名称'
   - server_ip VARCHAR(45) NOT NULL COMMENT '服务器IP地址'
   - latency DECIMAL(10,3) NOT NULL DEFAULT 0.000 COMMENT '延时值（毫秒）'
   - status VARCHAR(20) NOT NULL COMMENT '状态信息'
   - test_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '测试时间'
   - additional_info TEXT COMMENT '附加信息'
   - INDEX idx_report_id (report_id)
   - INDEX idx_server_name (server_name)
   - INDEX idx_test_time (test_time)
   - FOREIGN KEY (report_id) REFERENCES latcheck_report(report_id) ON DELETE CASCADE
   - INDEX idx_report_id (report_id)
   - INDEX idx_server_id (server_id)

5. calculated_latencies表：存储计算的地点间延时
   - id INT PRIMARY KEY AUTO_INCREMENT COMMENT '主键ID'
   - report1 INT NOT NULL COMMENT '较小的report_id'
   - report2 INT NOT NULL COMMENT '较大的report_id'
   - latency DECIMAL(8,2) NOT NULL COMMENT '延时值（毫秒）'
   - server_id INT NOT NULL COMMENT '服务器ID'
   - created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
   - INDEX idx_reports (report1, report2)
   - INDEX idx_server_id (server_id)
   - INDEX idx_created_time (created_time)

三、消息协议定义

客户端与服务器通过二进制消息通信，消息格式：

消息头（8字节）：
- msg_type (4字节): 消息类型
- data_length (4字节): 数据长度

消息类型定义：
- LOGIN_REQUEST = 0x0001: 登录请求
- LOGIN_OK = 0x0002: 登录成功
- LOGIN_FAIL = 0x0003: 登录失败
- LIST_REQUEST = 0x0004: 服务器列表请求
- LIST_RESPONSE = 0x0005: 服务器列表响应
- REPORT_REQUEST = 0x0006: 报告上传请求
- REPORT_OK = 0x0007: 报告上传成功
- REPORT_FAIL = 0x0008: 报告上传失败

数据格式：
- LOGIN_REQUEST: user_name(32字节) + password_hash(32字节)
- LIST_RESPONSE: server_count(4字节) + [server_id(4字节) + ip_addr(4字节)] * server_count
- REPORT_REQUEST: location_length(4字节) + location(变长) + record_count(4字节) + [server_id(4字节) + latency(4字节)] * record_count

四、错误码定义

系统错误码：
- SUCCESS = 0: 成功
- ERR_INVALID_USER = 1001: 用户名或密码错误
- ERR_USER_DISABLED = 1002: 用户被禁用
- ERR_PERMISSION_DENIED = 1003: 权限不足
- ERR_DATABASE_ERROR = 2001: 数据库错误
- ERR_INVALID_DATA = 3001: 数据格式错误
- ERR_SERVER_INTERNAL = 5001: 服务器内部错误

五、软件功能需求-客户端登录和报告上传

1. 实现TLS服务器，支持TLS 1.2及以上版本，客户端连接成功后进行消息通信。

2. 用户登录验证：接收LOGIN_REQUEST消息，验证用户名和密码哈希值（SHA-256），成功返回LOGIN_OK并保持连接，失败返回LOGIN_FAIL并断开连接。

3. 服务器列表服务：接收LIST_REQUEST消息，从test_server表查询active=true的记录，返回LIST_RESPONSE消息。

4. 报告上传处理：接收REPORT_REQUEST消息，在latcheck_report表创建记录，在report_detail表存储详细数据，成功返回REPORT_OK，失败返回REPORT_FAIL。

5. 连接管理：处理客户端异常断开，清理连接状态和临时数据。

6. 日志记录：实现分级日志（DEBUG、INFO、WARN、ERROR），按天轮转，保留30天历史日志。

7. 并发支持：支持多客户端并发连接，每个客户端独立会话状态。

8. 数据库连接池：初始连接数5，最大连接数20，连接超时30秒。

9. 配置文件：使用JSON格式配置文件config.json。

六、软件功能需求

1. 账号登录：接收账号名称，如果其level=1并且enable状态，对其密码使用对应的salt进行hash运算后，和存储的hash密码对比。需要在tls连接成功后10s内登录成功，否则断开连接。登录成功，则标记登录成功，并允许其上传report。

2. 权限控制：
   - 上传用户（level=1）：只能上传报告